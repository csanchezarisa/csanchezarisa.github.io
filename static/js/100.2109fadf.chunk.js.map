{"version":3,"file":"static/js/100.2109fadf.chunk.js","mappings":"mPAQMA,EAAwB,CAAC,SAAU,IAAK,MAAO,QAI/CC,EAAqB,CAAC,QAAS,YA0B/BC,EAAqB,SAACC,EAAGC,EAAUC,EAAQC,GAG3CD,EAAOE,UAKRH,IAAaC,EAAOE,QAAQC,UAAUC,SAAS,UAChDJ,EAAOE,QAAQC,UAAUE,IAAI,WAItBN,GAAYC,EAAOE,QAAQC,UAAUC,SAAS,WACrDJ,EAAOE,QAAQC,UAAUG,OAAO,UAGlCC,EAAkBT,EAAGE,EAAQC,GAC9B,EASKM,EAAoB,SAACT,EAAGE,EAAQC,GACpC,IAAMO,EAAgBV,EAAEW,OAAOC,SACzBC,EAAMX,EAAOE,QAAQU,SAAS,GAEjCjB,EAAsBkB,SAASL,GAChCG,EAAIG,IAAMb,EAAOc,QAEXnB,EAAmBiB,SAASL,GAClCG,EAAIG,IAAMb,EAAOe,KAEXL,EAAIG,MAAQb,EAAOgB,UACzBN,EAAIG,IAAMb,EAAOgB,QAEpB,EAoCD,MArBA,YAII,IAHFC,EAGC,EAHDA,WACAC,EAEC,EAFDA,WACAC,EACC,EADDA,QAEMpB,GAASqB,EAAAA,EAAAA,UAIf,OAhBwB,SAACrB,EAAQC,GACjCqB,OAAOC,iBAAiB,aAAa,SAACzB,GAAD,OApEpB,SAACA,EAAGE,GACrB,IAAMwB,EAAS1B,EAAE2B,QAAU,EACrBC,EAAS5B,EAAE6B,QAAU,GAEvB3B,EAAOE,UAIXF,EAAOE,QAAQ0B,MAAMC,UAArB,sBAAgDH,EAAhD,eAA6DF,EAA7D,UACD,CA2D6CM,CAAWhC,EAAGE,EAArB,IACrCsB,OAAOC,iBAAiB,aAAa,SAACzB,GAAD,OAAOD,EAAmBC,GAAG,EAAOE,EAAQC,EAA5C,IACrCqB,OAAOC,iBAAiB,YAAY,SAACzB,GAAD,OAAOD,EAAmBC,GAAG,EAAME,EAAQC,EAA3C,GACrC,CAUC8B,CAAkB/B,EAAQ,CAAEiB,QAASC,EAAYH,QAASI,EAAYH,KAAMI,KAG1E,+BACE,gBACEY,IAAKhC,EACLiC,UAAU,gBAFZ,UAIE,gBAAKnB,IAAKI,EAAYe,UAAU,SAASC,IAAI,cAIpD,ECvGKC,EAAWC,EAAAA,MAAW,kBAAM,qDAAN,IA6B5B,MA3BA,WACE,OAAmCC,EAAAA,EAAAA,WAAS,GAA5C,eAAOC,EAAP,KAAiBC,EAAjB,KAKA,OAJGD,GACDE,YAAW,kBAAMD,GAAe,EAArB,GAA4B,MAIvC,SAAC,KAAD,CACEE,IAAKH,EACLI,eAAe,EAFjB,UAIE,UAAC,MAAD,YACE,SAAC,EAAD,CACExB,W,y+EACAC,W,66IACAC,Q,wgKAEF,gBAAKa,UAAU,MAAf,UACE,SAAC,EAAAU,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAACV,EAAD,YAMX,C","sources":["components/CustomCursor/CustomCursor.js","App.js"],"sourcesContent":["import React, { useRef, MutableRefObject } from 'react';\r\n\r\nimport './CustomCursor.css';\r\n\r\n\r\n/**\r\n * DOM elements that change cursor to pointer type\r\n */\r\nconst pointerCursorElements = ['BUTTON', 'A', 'svg', 'path'];\r\n/**\r\n * DOM elements that change cursor to text type\r\n */\r\nconst textCursorElements = ['INPUT', 'TEXTAREA']\r\n\r\n/**\r\n * Moves the custom cursor to the mouse position\r\n * @param {Event} e Event of the listener\r\n * @param {MutableRefObject} cursor Div that contains the custom cursor\r\n */\r\nconst moveCursor = (e, cursor) => {\r\n  const mouseY = e.clientY - 5;\r\n  const mouseX = e.clientX - 24;\r\n   \r\n  if(!cursor.current) {\r\n    return;\r\n  }\r\n  \r\n  cursor.current.style.transform = `translate3d(${mouseX}px, ${mouseY}px, 0)`;\r\n};\r\n\r\n\r\n/**\r\n * Changes the cursor display state\r\n * @param {Event} e Event of the listener\r\n * @param {boolean} isHidden Whether the custom cursor should be hidden or not \r\n * @param {MutableRefObject} cursor Div that contains the custom cursor\r\n * @param {{ default: string, pointer: string, text: string }} images JSON with the cursor images references\r\n */\r\nconst changeCursorHidden = (e, isHidden, cursor, images) => {\r\n\r\n  // There are no div element selected\r\n  if(!cursor.current) {\r\n    return;\r\n  }\r\n\r\n  // The custom cursor should be hidden and it's not hidden already\r\n  if(isHidden && !cursor.current.classList.contains('hidden')) {\r\n    cursor.current.classList.add('hidden');\r\n  }\r\n\r\n  // The custom cursor should be displayed and it's hidden\r\n  else if(!isHidden && cursor.current.classList.contains('hidden')) {\r\n    cursor.current.classList.remove('hidden');\r\n  }\r\n\r\n  changeCursorStyle(e, cursor, images);\r\n};\r\n\r\n\r\n/**\r\n * Changes the custom cursor style\r\n * @param {Event} e Event of the listener\r\n * @param {MutableRefObject} cursor Div that contains the custom cursor\r\n * @param {{ default: string, pointer: string, text: string }} images JSON with the cursor images references\r\n */\r\nconst changeCursorStyle = (e, cursor, images) => {\r\n  const targetElement = e.target.nodeName;\r\n  const img = cursor.current.children[0];\r\n  \r\n  if(pointerCursorElements.includes(targetElement)) {\r\n    img.src = images.pointer;\r\n  }\r\n  else if(textCursorElements.includes(targetElement)) {\r\n    img.src = images.text;\r\n  }\r\n  else if(img.src !== images.default) {\r\n    img.src = images.default;\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Adds event listeners to move and style the custom cursor\r\n * @param {MutableRefObject} cursor Div that contains the custom cursor\r\n * @param {{ default: string, pointer: string, text: string }} images JSON with the cursor images references\r\n */\r\nconst AddEventListeners = (cursor, images) => {\r\n  window.addEventListener('mousemove', (e) => moveCursor(e, cursor));\r\n  window.addEventListener('mouseover', (e) => changeCursorHidden(e, false, cursor, images));\r\n  window.addEventListener('mouseout', (e) => changeCursorHidden(e, true, cursor, images));\r\n};\r\n\r\n\r\nfunction CustomCursor({ \r\n  defaultImg, \r\n  pointerImg,\r\n  textImg\r\n}) {\r\n  const cursor = useRef();\r\n\r\n  AddEventListeners(cursor, { default: defaultImg, pointer: pointerImg, text: textImg });\r\n\r\n  return (\r\n    <>\r\n      <div \r\n        ref={cursor}\r\n        className=\"cursor hidden\"\r\n      >\r\n        <img src={defaultImg} className='cursor' alt='cursor' />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CustomCursor;","import React, { Suspense, useState } from 'react';\r\nimport { ChakraProvider, Fade } from '@chakra-ui/react';\r\nimport CursorImage from 'assets/media/cursor.png';\r\nimport PointerImage from 'assets/media/pointer.png';\r\nimport TextImage from 'assets/media/text.png';\r\n\r\nimport './App.css';\r\nimport Loading from 'components/Loading/Loading';\r\nimport CustomCursor from 'components/CustomCursor/CustomCursor';\r\nconst FullPage = React.lazy(() => import('components/FullPage/FullPage'));\r\n\r\nfunction App() {\r\n  const [isLoaded, changeIsLoaded] = useState(false);\r\n  if(isLoaded) {\r\n    setTimeout(() => changeIsLoaded(true), 100);\r\n  }\r\n\r\n  return (\r\n    <Fade\r\n      in={!isLoaded}\r\n      unmountOnExit={true}\r\n    >\r\n      <ChakraProvider >\r\n        <CustomCursor \r\n          defaultImg={CursorImage} \r\n          pointerImg={PointerImage} \r\n          textImg={TextImage} \r\n        />\r\n        <div className=\"App\">\r\n          <Suspense fallback={<Loading />}>\r\n            <FullPage />\r\n          </Suspense>\r\n        </div>\r\n      </ChakraProvider>\r\n    </Fade>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"names":["pointerCursorElements","textCursorElements","changeCursorHidden","e","isHidden","cursor","images","current","classList","contains","add","remove","changeCursorStyle","targetElement","target","nodeName","img","children","includes","src","pointer","text","default","defaultImg","pointerImg","textImg","useRef","window","addEventListener","mouseY","clientY","mouseX","clientX","style","transform","moveCursor","AddEventListeners","ref","className","alt","FullPage","React","useState","isLoaded","changeIsLoaded","setTimeout","in","unmountOnExit","Suspense","fallback","Loading"],"sourceRoot":""}