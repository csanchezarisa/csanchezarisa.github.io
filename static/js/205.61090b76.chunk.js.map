{"version":3,"file":"static/js/205.61090b76.chunk.js","mappings":"yTAWMA,EAAY,CAChB,CACEC,KAAM,KACNC,KAAM,UACNC,aAAc,MAEhB,CACEF,KAAM,KACNC,KAAM,aACNC,aAAc,OAyElB,MArEA,WACE,IAAQC,GAAMC,EAAAA,EAAAA,KAAND,EAEFE,EAAsBC,EAAAA,EAAAA,IAAY,YAAc,KAChDC,EAAkBR,EAAUS,MAAK,SAAAC,GAAC,OAAIA,EAAET,OAASK,CAAf,IAIxC,OAFAK,EAAAA,EAAAA,YAAU,WAAS,GAAE,CAACH,KAGpB,SAACI,EAAA,EAAD,CACEC,kBAAgB,EAChBC,OAAO,KACPC,GAAG,OACHC,QAAQ,OACRC,OAAO,MACPC,MAAO,CAAEC,QAAS,IAClBC,GAAG,YAPL,UASE,UAACC,EAAA,EAAD,YAEE,UAACT,EAAA,QAAD,CAAcU,KAAK,IAAnB,WACE,gBACEC,IAAI,wEACJC,UAAU,gCACVC,IAAI,wBAEN,mBAAQL,GAAG,gBAAgBI,UAAU,OAArC,+BAEF,SAACZ,EAAA,SAAD,CAAe,gBAAc,2BAG7B,UAACA,EAAA,WAAD,CAAiBQ,GAAG,wBAApB,WACE,UAACM,EAAA,EAAD,CAAKF,UAAU,UAAf,WACE,SAACE,EAAA,OAAD,CAAUJ,KAAK,SAAf,qBACA,SAACI,EAAA,OAAD,CAAUJ,KAAK,SAAf,wBAIF,SAACI,EAAA,EAAD,WACE,UAACC,EAAA,EAAD,CACEC,MAAOxB,EAAE,YACTgB,GAAG,0BACHS,MAAM,MACNC,YAAY,OAJd,WAME,SAACH,EAAA,SAAD,UAAqBvB,EAAE,cAEtBJ,EAAU+B,KAAI,gBAAG9B,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAMC,EAAf,EAAeA,aAAf,OACb,UAACwB,EAAA,OAAD,CAEEK,QAAS,kBAAMC,EAAAA,EAAAA,IAAehC,EAArB,EACTiC,SAAUjC,IAASK,EAHrB,WAKE,iBACEkB,UAAS,8BAAyBrB,EAAzB,SACTe,MAAO,CAAEC,QAASlB,IAASK,EAAsB,GAAM,KAGxDJ,IATID,EAFM,gBAoB5B,ECrFKkC,EAAWC,EAAAA,MAAW,kBAAM,qDAAN,IAyB5B,MAvBA,WACE,OAAmCC,EAAAA,EAAAA,WAAS,GAA5C,eAAOC,EAAP,KAAiBC,EAAjB,KAKA,OAJGD,GACDE,YAAW,kBAAMD,GAAe,EAArB,GAA4B,MAIvC,SAAC,KAAD,CACEE,IAAKH,EACLI,eAAe,EAFjB,UAIE,SAAC,MAAD,WACE,iBAAKlB,UAAU,MAAf,WACE,SAAC,EAAD,KACA,SAAC,EAAAmB,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAACV,EAAD,YAMX,C","sources":["components/MainNavBar/MainNavBar.js","App.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport { changeLanguage } from 'i18next';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport cookies from 'js-cookie';\r\n\r\nimport './MainNavBar.css'\r\n\r\nconst languages = [\r\n  {\r\n    code: 'en',\r\n    name: 'English',\r\n    country_code: 'gb'\r\n  },\r\n  {\r\n    code: 'es',\r\n    name: 'EspaÃ±ol',\r\n    country_code: 'es'\r\n  }\r\n]\r\n\r\nfunction MainNavBar() {\r\n  const { t } = useTranslation();\r\n\r\n  const currentLanguageCode = cookies.get('i18next') || 'es';\r\n  const currentLanguage = languages.find(l => l.code === currentLanguageCode);\r\n\r\n  useEffect(() => { }, [currentLanguage])\r\n\r\n  return (\r\n    <Navbar \r\n      collapseOnSelect \r\n      expand=\"lg\" \r\n      bg=\"dark\" \r\n      variant=\"dark\" \r\n      sticky=\"top\"\r\n      style={{ opacity: 0.8 }}\r\n      id=\"main-menu\"\r\n    >\r\n      <Container>\r\n        {/* LOGO */}\r\n        <Navbar.Brand href=\"/\">\r\n          <img\r\n            src=\"https://www.gravatar.com/avatar/9fe92a893b3879a72ea0c451d504a3fb?s=30\"\r\n            className=\"logo d-inline-block align-top\"\r\n            alt=\"csanchezarisa logo\"\r\n          />\r\n          <strong id=\"logo-username\" className=\"logo\">CSANCHEZARISA</strong>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n        {/* NAV ITEMS */}\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"me-auto\">\r\n            <Nav.Link href=\"#item1\">Item 1</Nav.Link>\r\n            <Nav.Link href=\"#item2\">Item 2</Nav.Link>\r\n          </Nav>\r\n\r\n          {/* CHANGE LANG */}\r\n          <Nav>\r\n            <NavDropdown\r\n              title={t('language')}\r\n              id=\"collasible-nav-dropdown\"\r\n              align=\"end\"\r\n              menuVariant=\"dark\"\r\n            >\r\n              <NavDropdown.Header>{t('language')}</NavDropdown.Header>\r\n              \r\n              {languages.map(({ code, name, country_code }) => (\r\n                <NavDropdown.Item\r\n                  key={code}\r\n                  onClick={() => changeLanguage(code)}\r\n                  disabled={code === currentLanguageCode}\r\n                >\r\n                  <span\r\n                    className={`flag-icon flag-icon-${country_code} mx-2`}\r\n                    style={{ opacity: code === currentLanguageCode ? 0.5 : 1 }}\r\n                  >\r\n                  </span>\r\n                  {name}\r\n                </NavDropdown.Item>\r\n              ))}\r\n            </NavDropdown>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default MainNavBar\r\n","import React, { Suspense, useState } from 'react';\r\nimport { ChakraProvider, Fade } from '@chakra-ui/react';\r\n\r\nimport './App.css';\r\nimport Loading from './components/Loading/Loading';\r\nimport MainNavBar from './components/MainNavBar/MainNavBar';\r\nconst FullPage = React.lazy(() => import('./components/FullPage/FullPage'))\r\n\r\nfunction App() {\r\n  const [isLoaded, changeIsLoaded] = useState(false);\r\n  if(isLoaded) {\r\n    setTimeout(() => changeIsLoaded(true), 100)\r\n  }\r\n\r\n  return (\r\n    <Fade\r\n      in={!isLoaded}\r\n      unmountOnExit={true}\r\n    >\r\n      <ChakraProvider>\r\n        <div className=\"App\">\r\n          <MainNavBar />\r\n          <Suspense fallback={<Loading />}>\r\n            <FullPage />\r\n          </Suspense>\r\n        </div>\r\n      </ChakraProvider>\r\n    </Fade>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"names":["languages","code","name","country_code","t","useTranslation","currentLanguageCode","cookies","currentLanguage","find","l","useEffect","Navbar","collapseOnSelect","expand","bg","variant","sticky","style","opacity","id","Container","href","src","className","alt","Nav","NavDropdown","title","align","menuVariant","map","onClick","changeLanguage","disabled","FullPage","React","useState","isLoaded","changeIsLoaded","setTimeout","in","unmountOnExit","Suspense","fallback","Loading"],"sourceRoot":""}